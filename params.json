{"name":"Monkey","tagline":"Does what I need, so I can do what I like.","body":"Personal Home/Office Automation Monkey [![Build Status](https://travis-ci.org/ustuehler/monkey.svg?branch=master)](https://travis-ci.org/ustuehler/monkey)\r\n--------------------------------------\r\n\r\nI'm slowly teaching my monkey to do all the chores that I don't like.  Every\r\nnow and then I teach it a new trick, but for now, here's what it can do...\r\n\r\n**Accounting**\r\n\r\n- reads and manipulates human-readable [ledger](http://ledger-cli.org) files\r\n- imports bank statements in CSV format into my accounting ledger\r\n\r\n**Banking**\r\n\r\n- does online-banking via HBCI using [aqbanking-cli](http://www2.aquamaniac.de/sites/aqbanking/cli.php)\r\n- checks account balances\r\n- issues transfers\r\n\r\n**Small-business management**\r\n\r\n- keeps track of my customers and suppliers\r\n- generates time-sheets for contract work\r\n- generates invoices ready to send\r\n\r\n**E-mail processing**\r\n\r\n- accounts for business expenses extracted from received invoices\r\n- stores time-recording reports for later time-sheet and invoice printing\r\n\r\nNote: The published code does not do absolutely everything that is mentioned\r\nabove, some things are still implemented as crude Rake scripts, using Monkey\r\nonly as a Ruby library.\r\n\r\nUsage\r\n-----\r\n\r\nMonkey's primary interface is a self-documenting command-line application, but\r\nit can as well be used as a Ruby library.  I personally use Monkey from\r\n[pry](http://pryrepl.org/) whenever I want to do something that isn't supported\r\nby the command-line interface.\r\n\r\nHere's how to get started:\r\n\r\n```text\r\nbundle install\r\nbundle exec bin/monkey\r\n```\r\n","google":"UA-49279052-1","note":"Don't delete this file! It's used internally to help with page regeneration."}